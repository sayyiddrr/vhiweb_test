openapi: 3.0.0
info:
  title: Vhiweb E-Procurement API
  description: REST API untuk autentikasi user, pendaftaran vendor, dan manajemen katalog produk.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api
paths:
  /register:
    post:
      summary: Register User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, password_confirmation]
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
      responses:
        '200':
          description: User registered

  /login:
    post:
      summary: Login User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /vendor:
    post:
      summary: Register Vendor
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: [company_name, address, phone]
              type: object
              properties:
                company_name:
                  type: string
                address:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: Vendor registered

  /products:
    get:
      summary: Get Products by Vendor
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of products
    post:
      summary: Create Product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: [name, price]
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
      responses:
        '200':
          description: Product created

  /products/{id}:
    put:
      summary: Update Product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
      responses:
        '200':
          description: Product updated
    delete:
      summary: Delete Product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT